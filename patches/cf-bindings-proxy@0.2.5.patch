diff --git a/proxy.cjs b/proxy.cjs
index d8ee273bb5a4f5bb9c9ca7e48eb7e4bc4dc649c4..9a6487050175b4716c71429f698016bc4a37c07c 100644
--- a/proxy.cjs
+++ b/proxy.cjs
@@ -1,2 +1,2 @@
-"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("./transform.cjs"),o=async i=>{let s;try{s=await fetch("http://127.0.0.1:8799",{body:JSON.stringify(i),method:"POST",headers:{"Content-Type":"application/json"}})}catch{throw new Error("Unable to connect to binding proxy")}const{success:n,data:e,transform:r}=await s.json();if(!n)throw new Error(e||"Bad response from binding proxy");return r?a.transformData(e,r):e},u=(i,s,n)=>new Proxy(n,{get(e,r){if(!n||["then",Symbol.iterator,Symbol.toStringTag].includes(r))return;if(r in n||["error","results"].includes(r))return n[r];if(Array.isArray(n)&&typeof r=="string"&&!Number.isNaN(Number(r)))return n[Number(r)];const t=c(i,!0);return t.__original_call=s,async(...l)=>(t.__calls.push({prop:r,args:l}),o(t))}}),_=i=>["prepare"].includes(i)?["first","run","all","raw"]:[],c=(i,s=!1)=>new Proxy({__bindingId:i,__calls:[],__chainUntil:[]},{get(n,e){if(e.startsWith("__"))return n[e];if(e!=="toJSON"&&!s){if(n.__chainUntil.length||(n.__chainUntil=_(e)),n.__chainUntil.length&&!n.__chainUntil.includes(e)){const r=c(i);return r.__chainUntil=n.__chainUntil,r.__calls=n.__calls,(...t)=>(n.__calls.push({prop:e,args:t}),r)}return async(...r)=>{n.__calls.push({prop:e,args:r});const t=await o(n);return typeof t!="object"||!t?t:u(i,n,t)}}}});exports.createBindingProxy=c;
+"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("./transform.cjs"),o=async i=>{let s;try{s=await fetch("http://127.0.0.1:8799",{body:JSON.stringify(i),method:"POST",cache:"no-store",headers:{"Content-Type":"application/json"}})}catch{throw new Error("Unable to connect to binding proxy")}const{success:n,data:e,transform:r}=await s.json();if(!n)throw new Error(e||"Bad response from binding proxy");return r?a.transformData(e,r):e},u=(i,s,n)=>new Proxy(n,{get(e,r){if(!n||["then",Symbol.iterator,Symbol.toStringTag].includes(r))return;if(r in n||["error","results"].includes(r))return n[r];if(Array.isArray(n)&&typeof r=="string"&&!Number.isNaN(Number(r)))return n[Number(r)];const t=c(i,!0);return t.__original_call=s,async(...l)=>(t.__calls.push({prop:r,args:l}),o(t))}}),_=i=>["prepare"].includes(i)?["first","run","all","raw"]:[],c=(i,s=!1)=>new Proxy({__bindingId:i,__calls:[],__chainUntil:[]},{get(n,e){if(e.startsWith("__"))return n[e];if(e!=="toJSON"&&!s){if(n.__chainUntil.length||(n.__chainUntil=_(e)),n.__chainUntil.length&&!n.__chainUntil.includes(e)){const r=c(i);return r.__chainUntil=n.__chainUntil,r.__calls=n.__calls,(...t)=>(n.__calls.push({prop:e,args:t}),r)}return async(...r)=>{n.__calls.push({prop:e,args:r});const t=await o(n);return typeof t!="object"||!t?t:u(i,n,t)}}}});exports.createBindingProxy=c;
 //# sourceMappingURL=proxy.cjs.map
diff --git a/proxy.js b/proxy.js
index 70a272db0b98ffa5403f55d3ecba37cac2bb1cd0..6800b02c588ff2414a9ea0ca5792b7c6939481f4 100644
--- a/proxy.js
+++ b/proxy.js
@@ -5,6 +5,7 @@ const c = async (i) => {
     s = await fetch("http://127.0.0.1:8799", {
       body: JSON.stringify(i),
       method: "POST",
+      cache: "no-store",
       headers: { "Content-Type": "application/json" }
     });
   } catch {
